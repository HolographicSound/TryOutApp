// Debug版，作为一个单独的应用
if (isDebug.toBoolean()) {
    apply plugin: 'com.android.application'
}
// 发布版，作为一个library
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    // 资源路径设置
    sourceSets {
        main {
            // 组件开发模式
            if (isDebug.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
            // 集成开发模式
            else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                // 排除 debug 文件夹中的所有 Java 文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // 引入 ActivityRouter 的 Annotation 处理器，将会在申明组件和使用 Url 的时候使用
    annotationProcessor "com.github.mzule.activityrouter:compiler:$rootProject.annotationProcessor"
    compile project(':lib_common')
}
